<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Tiny Factory Docs</title>
 <link href="http://docs.tinyfactory.co/atom.xml" rel="self"/>
 <link href="http://docs.tinyfactory.co/"/>
 <updated>2013-04-22T18:06:03-07:00</updated>
 <id>http://docs.tinyfactory.co</id>
 <author>
   <name>Tiny Factory</name>
   <email>hello@tinyfactory.co</email>
 </author>

 
 <entry>
   <title>Amazon Cloudfront Api Authorization And Invalidation With Node.js</title>
   <link href="http://docs.tinyfactory.co/node.js/2013/01/14/Amazon-Cloudfront-API-Authorization-and-Invalidation-with-Node.js.html"/>
   <updated>2013-01-14T00:00:00-08:00</updated>
   <id>http://docs.tinyfactory.co/node.js/2013/01/14/Amazon-Cloudfront-API-Authorization-and-Invalidation-with-Node.js</id>
   
   <author>
   	<name>Alex Rolek</name>
   	<email>a.rolek@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;We have been working on integrating Amazon's Cloudfront CDN into our upcoming language learning game &lt;a href=&quot;http://www.catchlingual.com&quot;&gt;Lingual&lt;/a&gt;. One of the requirements when we push to production is invalidating a batch of previously cached packages on Amazon's Cloudfront. Our system is written in Node.js, so this is a quick script I put together to test the integration with Amazon's Cloudfront API.&lt;/p&gt;

&lt;p&gt;Building the 'Authorization' string required to make the request was a bit tricky, so hopefully this script will help someone out.&lt;/p&gt;

&lt;p&gt;``` js
var crypto = require('crypto');
var querystring = require('querystring');
var https = require('https');&lt;/p&gt;

&lt;p&gt;var distroId = 'XXXXXXXXXXX', // your cloudfront distribution id.
    accessKey = 'XXXXXXXXXXX', // your amazon access key
    secretKey = 'XXXXXXXXXXX', // your amazon secret key
    domain = 'cloudfront.amazonaws.com',
    port = 443,
    path = '/2012-07-01/distribution/' + distroId + '/invalidation',
    date = ''; // fetched via an amazon request later in the script&lt;/p&gt;

&lt;p&gt;//  Amazon suggests you fetch the date header from their server
//  since they require the timestamp that is used in your signature
//  to be withing 15 mintues of their server time.
var dateOptions = {
    host: domain,
    port: port,
    path: '/date'
};&lt;/p&gt;

&lt;p&gt;var amazonDate = https.request(dateOptions, function(res){
    res.setEncoding('utf8');&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//  we now have the date property from Amazon that we can
//  use as the base of our Authroization signature
date = res.headers.date;

//  now let's call our invalidation script
invalidate();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}).end();&lt;/p&gt;

&lt;p&gt;function invalidate(){
    //  wrapping the URI string in &amp;lt;![CDATA[ ]]&amp;gt; avoids xml encoding the URI 
    //  (which in our case would be necessary beacuse of the '&amp;amp;' and '=' chars)
    var postData = [''
        ,'&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;'
        ,'&lt;InvalidationBatch xmlns=&quot;http://cloudfront.amazonaws.com/doc/2012-07-01/&quot;&gt;'
        ,'  &lt;Paths&gt;'
        ,'      &lt;Quantity&gt;1&lt;/Quantity&gt;'
        ,'      &lt;Items&gt;'
        ,'          &lt;Path&gt;&amp;lt;![CDATA[/api/packageGet%253fpkg=images%252ficons%252fanimals&amp;amp;lastMod=0&amp;amp;size=1x]]&amp;gt;&lt;/Path&gt;'
        ,'      &lt;/Items&gt;'
        ,'  &lt;/Paths&gt;'
        ,'  &lt;CallerReference&gt;20120301090192&lt;/CallerReference&gt;'
        ,'&lt;/InvalidationBatch&gt;'].join('');&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//  now that we have the date from amazon's servers, lets generate our auth string
var authStr = crypto.createHmac('sha1', secretKey).update(date).digest('base64');

var postOptions = {  
  host: domain,  
  port: port,  
  path: path,  
  method: 'POST',  
  headers: {  
    'Authorization': 'AWS ' + accessKey + &amp;quot;:&amp;quot; + authStr,
    'Date': date,
    'Content-Type': 'application/x-www-form-urlencoded',  
    'Content-Length': postData.length  
  }  
};

var postReq = https.request(postOptions, function(res) {  
  res.setEncoding('utf8');
  res.on('data', function (chunk) {
    console.log('Response: ' + chunk);
  });  
});

postReq.on('error', function(error){
    console.log(error);
});

// write parameters to post body  
postReq.write(postData);  
postReq.end();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}
```&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Formatting, Partitioning, and Mounting Drives on CentOS</title>
   <link href="http://docs.tinyfactory.co/centos/2013/01/11/formatting-partitioning-and-mounting-drives-on-cent-os.html"/>
   <updated>2013-01-11T00:00:00-08:00</updated>
   <id>http://docs.tinyfactory.co/centos/2013/01/11/formatting-partitioning-and-mounting-drives-on-cent-os</id>
   
   <author>
   	<name>Alex Rolek</name>
   	<email>a.rolek@gmail.com</email>
   </author>
   <content type="html">&lt;h1&gt;Mounting a new disk or external drive on CentOS&lt;/h1&gt;

&lt;p&gt;I always forget how to do this, so here is a quick writeup.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; You need to be root or add &lt;code&gt;sudo&lt;/code&gt; before all commands.&lt;/p&gt;

&lt;h2&gt;Locate attached drives&lt;/h2&gt;

&lt;p&gt;```
[root@server]# ls /dev/sd*&lt;/p&gt;

&lt;p&gt;brw-rw----. 1 root disk 8,  0 Jun  2  2012 /dev/sda
brw-rw----. 1 root disk 8,  1 Jun  2  2012 /dev/sda1
brw-rw----. 1 root disk 8,  2 Jun  2  2012 /dev/sda2
brw-rw----. 1 root disk 8, 16 Jan 11 09:01 /dev/sdb
``&lt;code&gt;
The output is shows that drive&lt;/code&gt;/dev/sda&lt;code&gt;has 2 partitaions,&lt;/code&gt;/dev/sda1&lt;code&gt;and&lt;/code&gt;/dev/sda2&lt;code&gt;. Our target drive&lt;/code&gt;/dev/sdb` has no partitions so we need to create one.&lt;/p&gt;

&lt;h2&gt;Partition the drive&lt;/h2&gt;

&lt;p&gt;If this is a new drive, you will need to make a partition and format it. If not skip this step.&lt;/p&gt;

&lt;p&gt;The following steps will create a single partition that will take up the entire drive:&lt;/p&gt;

&lt;p&gt;```
[root@server]# fdisk /dev/sdb&lt;/p&gt;

&lt;p&gt;WARNING: DOS-compatible mode is deprecated. It's strongly recommended to
         switch off the mode (command 'c') and change display units to
         sectors (command 'u').&lt;/p&gt;

&lt;p&gt;Command (m for help):
```
In this case we need to switch off the DOS compatible mode and change the units to sectors:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Command (m for help): c
DOS Compatibility flag is not set
Command (m for help): u
Changing display/entry units to sectors
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create a new part ion by typing &lt;code&gt;n&lt;/code&gt;. We will then select this as a primary part ion by entering &lt;code&gt;p&lt;/code&gt; and select this as the first partition by entering &lt;code&gt;1&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
p
Partition number (1-4): 1
First cylinder (1-182401, default 1):
Using default value 1
Last cylinder, +cylinders or +size{K,M,G} (1-182401, default 182401):
Using default value 182401
&lt;/code&gt;
We can review our results by entering &lt;code&gt;p&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;```
Command (m for help): p&lt;/p&gt;

&lt;p&gt;Disk /dev/sdb: 1500.3 GB, 1500301910016 bytes
255 heads, 63 sectors/track, 182401 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000&lt;/p&gt;

&lt;p&gt;Device Boot      Start         End      Blocks   Id  System
/dev/sdb1               1      182401  1465136001   83  Linux
```
Write (save) the part ion:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Command (m for help): w
The partition table has been altered!
&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Format the filesystem&lt;/h2&gt;

&lt;p&gt;There are a few different types of filesystems to consider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;auto - this is a special one. It will try to guess the file system type when you use this.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt; ext4 - this is probably the most common Linux file system type of the last few years&lt;br /&gt;&lt;/li&gt;
&lt;li&gt; ext3 - this is the most common Linux file system type from a couple years back&lt;br /&gt;&lt;/li&gt;
&lt;li&gt; ntfs - this is the most common Windows file system type or larger external hard drives&lt;br /&gt;&lt;/li&gt;
&lt;li&gt; vfat - this is the most common file system type used for smaller external hard drives&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For our situation we will use ext4&lt;/p&gt;

&lt;p&gt;```
[root@server] mkfs.ext4 /dev/sdb1&lt;/p&gt;

&lt;p&gt;mke2fs 1.41.12 (17-May-2010)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
91578368 inodes, 366284000 blocks
18314200 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=0
11179 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks:
    32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
    4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968,
    102400000, 214990848
```&lt;/p&gt;

&lt;p&gt;This will take awhile and will show &lt;code&gt;Writing inote tables:&lt;/code&gt; with numbers detailing progress.&lt;/p&gt;

&lt;h2&gt;Mount the new drive&lt;/h2&gt;

&lt;p&gt;If you don't already have a mount point, make one. This is the directory you will able to access the newly mounted drive&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
[root@server]# mkdir /mnt/backup
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can now mount the partition we created earlier to the new mount point:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
[root@server] mount /dev/sdb1 /mnt/backup
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And we are done!&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>HTML5 Placeholder in IE7 and IE8 fix</title>
   <link href="http://docs.tinyfactory.co/jquery/2012/12/18/HTML5-Placeholder-In-ie7-and-ie8-fix.html"/>
   <updated>2012-12-18T00:00:00-08:00</updated>
   <id>http://docs.tinyfactory.co/jquery/2012/12/18/HTML5-Placeholder-In-ie7-and-ie8-fix</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;You can now use the HTML5 placeholder attribute in IE7 &amp;amp; IE8 - just use this code below.  Origionally found at: &lt;a href=&quot;http://dipaksblogonline.blogspot.com/2012/02/html5-placeholder-in-ie7-and-ie8-fixed.html&quot;&gt;dipaksblogonline&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>iOS Store Submission Checklist</title>
   <link href="http://docs.tinyfactory.co/design/2012/10/03/ios-store-submission-checklist.html"/>
   <updated>2012-10-03T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/design/2012/10/03/ios-store-submission-checklist</id>
   
   <author>
   	<name>Alex Rolek</name>
   	<email>a.rolek@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;In order to submit an application to Apple's App Store, there are numerous requiements.  We use this checklist to make sure we have everything we need prior to submission.&lt;/p&gt;

&lt;h3&gt;icons&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;57px - iPhone&lt;/li&gt;
&lt;li&gt;72px - iPad&lt;/li&gt;
&lt;li&gt;114px - iPhone 4 + Retina Display&lt;/li&gt;
&lt;li&gt;512px - iTunes – Used in iTunes and in the App Store sized down to 175px&lt;/li&gt;
&lt;li&gt;1024px - New requirement (now with macbook retina)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Splash&lt;/h3&gt;

&lt;p&gt;Must be named exactly as is next to the dimensions.  Must be a PNG file.
* 320 x 480px - Default.png - iPhone 3Gs and older
* 640 x 960px - Default@2x.png - iPhone 4 &amp;amp; 4s
* 1136 x 640px - Default-568h@2x.png - iPhone 5&lt;/p&gt;

&lt;h3&gt;Screenshots&lt;/h3&gt;

&lt;p&gt;File formats allowed: .jpeg, .jpg, .tif, .tiff, or .png
Color space: RGB
DPI: at least 72 DPI&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Iphone 4/4s

&lt;ul&gt;
&lt;li&gt;Portrait: 960 x 640px or 960 x 600px&lt;/li&gt;
&lt;li&gt;Landscape: 640 x 960px or 640 x 920px&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Iphone 5

&lt;ul&gt;
&lt;li&gt;Portrait: 1136 x 640px&lt;/li&gt;
&lt;li&gt;Landscape: 640 x 1136px&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;iPad:

&lt;ul&gt;
&lt;li&gt;Portrait: 768 x 1024px or 1536 x 2048px&lt;/li&gt;
&lt;li&gt;Landscape: 1024 x 768px or 2048 x 1536px&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Submittal Information&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;li&gt;Keywords&lt;/li&gt;
&lt;li&gt;Default Language&lt;/li&gt;
&lt;li&gt;Version Number&lt;/li&gt;
&lt;li&gt;Copyright&lt;/li&gt;
&lt;li&gt;Primary Category&lt;/li&gt;
&lt;li&gt;Secondary Category (optional)&lt;/li&gt;
&lt;li&gt;Support Email Address&lt;/li&gt;
&lt;li&gt;Support URL&lt;/li&gt;
&lt;li&gt;Marketing URL (optional)&lt;/li&gt;
&lt;li&gt;Privacy Policy URL (optional)&lt;/li&gt;
&lt;/ul&gt;
</content>

 </entry>
 
 <entry>
   <title>Google Play Store Submission Checklist Mobile</title>
   <link href="http://docs.tinyfactory.co/design/2012/10/03/Google-Play-Store-Submission-Checklist-Mobile.html"/>
   <updated>2012-10-03T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/design/2012/10/03/Google-Play-Store-Submission-Checklist-Mobile</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;So you've finished your application and you're ready to submit it to the Google Play store, but wait - you still need more assets!  Here's a quick checklist for what you'll need to prepare before submission.&lt;/p&gt;

&lt;h3&gt;Icons&lt;/h3&gt;

&lt;p&gt;Name the file icon.png (lowercase &amp;quot;i&amp;quot;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;512x512 - required for publishing&lt;/li&gt;
&lt;li&gt;96x96 - xhdpi&lt;/li&gt;
&lt;li&gt;72x72 - hdpi&lt;/li&gt;
&lt;li&gt;48x48 - mdpi&lt;/li&gt;
&lt;li&gt;36x36 - ldpi &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Splash&lt;/h3&gt;

&lt;p&gt;Name the file splash.png (lowercase &amp;quot;s&amp;quot;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;960dp x 720dp - xhdpi&lt;/li&gt;
&lt;li&gt;640dp x 480dp - hdpi&lt;/li&gt;
&lt;li&gt;470dp x 320dp - mdpi&lt;/li&gt;
&lt;li&gt;426dp x 320dp - ldpi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the minimum screen densities for the various Android device resolutions. Android will size the splash screens from each of these to match the device that is opening the app.&lt;/p&gt;

&lt;h3&gt;Screen shots - at least 2 required&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Dimensions: 320 x 480, 480 x 800, 480 x 854, 1280 x 720, 1280 x 800&lt;/li&gt;
&lt;li&gt;24 bit PNG or JPEG (no alpha)&lt;/li&gt;
&lt;li&gt;Full bleed, no border in art&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Promo Graphic (Optional)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;180w x 120h&lt;/li&gt;
&lt;li&gt;24 bit PNG or JPEG (no alpha)&lt;/li&gt;
&lt;li&gt;No border in art&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Feature Graphic (Optional)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;1024 x 500&lt;/li&gt;
&lt;li&gt;Will be downsized to mini or micro&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Promotional Video:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Enter YouTube URL&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Text descriptions&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Language&lt;/li&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;Description&lt;/li&gt;
&lt;li&gt;Promo Text&lt;/li&gt;
&lt;li&gt;Application Type&lt;/li&gt;
&lt;li&gt;Category&lt;/li&gt;
&lt;li&gt;Contact information&lt;/li&gt;
&lt;li&gt;Website&lt;/li&gt;
&lt;li&gt;Email&lt;/li&gt;
&lt;li&gt;Phone&lt;/li&gt;
&lt;/ul&gt;
</content>

 </entry>
 
 <entry>
   <title>Text Overflow Ellipsis Using Less</title>
   <link href="http://docs.tinyfactory.co/less/2012/09/20/text-overflow-ellipsis-using-LESS.html"/>
   <updated>2012-09-20T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/less/2012/09/20/text-overflow-ellipsis-using-LESS</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;As a follow up to our &lt;a href=&quot;http://docs.tinyfactory.co/css/2012/08/11/text-overflow-ellipsis-using-CSS.html&quot;&gt;CSS ellipsis&lt;/a&gt; solution, this LESS overflow ellipsis mixin is perfect for single line truncations.  &lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Less Placeholder Text Mixin</title>
   <link href="http://docs.tinyfactory.co/less/2012/09/20/LESS-placeholder-text-mixin.html"/>
   <updated>2012-09-20T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/less/2012/09/20/LESS-placeholder-text-mixin</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;Simple LESS mixin for Placeholder Text:&lt;/p&gt;

&lt;p&gt;Syntax:&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.  Add the .placeholder mixin to your stylesheet (or reference it from a file such as var.less)
2.  In your stylesheet call the mixin like: 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;This will compile to: &lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Text Overflow Ellipsis Using Jquery</title>
   <link href="http://docs.tinyfactory.co/jquery/2012/08/11/text-overflow-ellipsis-using-jquery.html"/>
   <updated>2012-08-11T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/jquery/2012/08/11/text-overflow-ellipsis-using-jquery</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;If CSS isn't enough to solve your your ellipsis issues and you want to take it to the next level and insert after multiple lines you can introduce some jQuery into the mix.  This is a solution I found on &lt;a href=&quot;http://stackoverflow.com/questions/536814/insert-ellipsis-into-html-tag-if-content-too-wide&quot;&gt;stacks overflow&lt;/a&gt; that works quite well.&lt;/p&gt;

&lt;p&gt;Use this in your CSS document&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;Here is your HTML, always remember to include jQuery in your document before using jQuery.&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;...and last but not least the jquery for creating a single or multi-line ellipsis&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;If you're looking more configurable options, check out the &lt;a href=&quot;http://dotdotdot.frebsite.nl/&quot;&gt;dotdotdot&lt;/a&gt; jQuery plugin.&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Text Overflow Ellipsis Using Css</title>
   <link href="http://docs.tinyfactory.co/css/2012/08/11/text-overflow-ellipsis-using-CSS.html"/>
   <updated>2012-08-11T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/css/2012/08/11/text-overflow-ellipsis-using-CSS</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;The CSS text overflow ellipsis solution is perfect for single line truncations.  I use this constantly when building mobile or responsive applications.&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Targeting Mobile Webkit Browsers With Javascript</title>
   <link href="http://docs.tinyfactory.co/javascript/2012/08/10/targeting-mobile-webkit-browsers-with-javascript.html"/>
   <updated>2012-08-10T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/javascript/2012/08/10/targeting-mobile-webkit-browsers-with-javascript</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;Here is a way to target mobile browsers with Javascript.  It's not recommended you use this as your sole method for targeting mobile browsers as it first requires your users to load your entire standard site before serving your mobile specific code.  But if used in conjunction with &lt;a href=&quot;http://docs.tinyfactory.co/sass/2012/08/02/sass-inline-media-queries.html&quot;&gt;CSS Media Queries&lt;/a&gt; - this can be quite handy.&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Compass Animated Button Mixin</title>
   <link href="http://docs.tinyfactory.co/compass/2012/08/07/compass-animated-button-mixin.html"/>
   <updated>2012-08-07T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/compass/2012/08/07/compass-animated-button-mixin</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;This mixin will create an animated hover and active state for your button (&lt;a href=&quot;http://dribbble.com/shots/678970-Compass-CSS3-Button-Mixin&quot;&gt;View Example Here&lt;/a&gt;) using css3 transitions.  Feel free to replace the variables or add them to a variable sheet inside of your project.  Add this mixin to your Compass project: &lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;In your style sheet add:&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;and it will compile to:&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;Fork the repo on &lt;a href=&quot;https://github.com/michaelsacca/Fancy-Compass-Button-Mixin&quot;&gt;github&lt;/a&gt; and create your own.&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Sass Inline Media Queries</title>
   <link href="http://docs.tinyfactory.co/sass/2012/08/02/sass-inline-media-queries.html"/>
   <updated>2012-08-02T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/sass/2012/08/02/sass-inline-media-queries</id>
   
   <author>
   	<name>Aaron Wade</name>
   	<email>hi@areuswade.com</email>
   </author>
   <content type="html">&lt;p&gt;With SASS 3.2 we get inline media queries. Compass allows this if you're using the alpha build. At of the date of this doc, &lt;code&gt;0.12.2&lt;/code&gt; is the current version.&lt;/p&gt;

&lt;p&gt;We can install Compass alpha &lt;code&gt;0.13.0&lt;/code&gt; by running &lt;code&gt;sudo gem install compass --pre&lt;/code&gt;. This is a prerelease build, so if you're worried about things not working, hold out until &lt;code&gt;0.13.x&lt;/code&gt; is released.&lt;/p&gt;

&lt;p&gt;Before inline media queries, we'd throw all of our device arguments in a section at the bottom of our stylesheets. Inline media queries allow me to do something like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sass
header
    background: rgba(0,0,0,0.5)
    color: #fff
    +mobile-landscape-and-up
        background: rgba(0,0,0,1)
        color: #fff
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The mixins below will allow you to do what I've demonstrated above. This is a port to the old SASS syntax from the amazing base the Anthony Short developed. You're able to use any of the @mixin properties inline throughout your stylesheet. No more scrolling top to bottom to see what you need to override.&lt;/p&gt;

&lt;p&gt;``` sass
$mq-mobile-portrait: 320px !default
$mq-mobile-landscape: 480px !default
$mq-tablet-portrait: 768px !default
$mq-tablet-landscape: 1024px !default
$mq-desktop: 1382px !default&lt;/p&gt;

&lt;p&gt;@mixin mobile-only
    @media (max-width : $mq-mobile-landscape)
        @content&lt;/p&gt;

&lt;p&gt;@mixin mobile-portrait-only
    @media (max-width : $mq-mobile-portrait)
        @content&lt;/p&gt;

&lt;p&gt;@mixin mobile-portrait-and-below
    @media (max-width : $mq-mobile-portrait)
        @content&lt;/p&gt;

&lt;p&gt;@mixin mobile-portrait-and-up
    @media (min-width : $mq-mobile-portrait)
        @content&lt;/p&gt;

&lt;p&gt;@mixin mobile-landscape-only
    @media only screen and (min-width : $mq-mobile-portrait + 1) and (max-width : $mq-mobile-landscape)
        @content&lt;/p&gt;

&lt;p&gt;@mixin mobile-landscape-and-below
    @media only screen and (max-width : $mq-mobile-landscape)
        @content&lt;/p&gt;

&lt;p&gt;@mixin mobile-landscape-and-up
    @media only screen and (min-width : $mq-mobile-portrait + 1)
        @content&lt;/p&gt;

&lt;p&gt;@mixin tablet-only
    @media only screen and (min-width : $mq-mobile-landscape + 1) and (max-width : $mq-tablet-landscape)
        @content&lt;/p&gt;

&lt;p&gt;@mixin tablet-portrait-only
    @media only screen and (min-width : $mq-mobile-landscape + 1) and (max-width : $mq-tablet-portrait)
        @content&lt;/p&gt;

&lt;p&gt;@mixin tablet-portrait-and-below
    @media only screen and (max-width : $mq-tablet-portrait)
        @content&lt;/p&gt;

&lt;p&gt;@mixin tablet-portrait-and-up
    @media only screen and (min-width : $mq-mobile-landscape + 1)
        @content&lt;/p&gt;

&lt;p&gt;@mixin tablet-landscape-only
    @media only screen and (min-width : $mq-tablet-portrait + 1) and (max-width : $mq-tablet-landscape)
        @content&lt;/p&gt;

&lt;p&gt;@mixin tablet-landscape-and-below
    @media only screen and (max-width : $mq-tablet-landscape)
        @content&lt;/p&gt;

&lt;p&gt;@mixin tablet-landscape-and-up
    @media only screen and (min-width : $mq-tablet-portrait + 1)
        @content&lt;/p&gt;

&lt;p&gt;@mixin desktop-and-up
    @media only screen and (min-width : $mq-tablet-landscape + 1)
        @content&lt;/p&gt;

&lt;p&gt;@mixin desktop-and-below
    @media only screen and (max-width : $mq-desktop)
        @content&lt;/p&gt;

&lt;p&gt;@mixin desktop-only
    @media only screen and (min-width : $mq-tablet-landscape + 1) and (max-width : $mq-desktop)
        @content&lt;/p&gt;

&lt;p&gt;@mixin retina
    @media only screen and (-webkit-min-device-pixel-ratio : 1.5), only screen and (min-device-pixel-ratio : 1.5)
        @content
```&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Sencha Touch 2 Jsonp Xml Reader Jsonpx</title>
   <link href="http://docs.tinyfactory.co/sencha touch 2/2012/08/02/Sencha-Touch-2-JSONP-XML-Reader-JSONPX.html"/>
   <updated>2012-08-02T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/sencha touch 2/2012/08/02/Sencha-Touch-2-JSONP-XML-Reader-JSONPX</id>
   
   <author>
   	<name>Alex Rolek</name>
   	<email>a.rolek@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;I was integrating with a client's API which used a blend of JSONP and XML.  Sencha Touch 2 does not have a native way to parse this, so I extended XML reader to make a 'jsonpx' reader.  Hopefully this will help someone who might run into the same situation.&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;To use, place create a file [app root]/util/jsonpX.js&lt;/p&gt;

&lt;p&gt;Inside of the store you are using, make sure to include and declare it as the reader.  For example:&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;This code was inspired by a piece I found for Sencha Touch 1  &lt;a href=&quot;http://www.sencha.com/forum/showthread.php?12852-ScriptTagProxy-and-XML&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Compass Retina Display Mixin</title>
   <link href="http://docs.tinyfactory.co/compass/2012/08/01/compass-retina-display-mixin.html"/>
   <updated>2012-08-01T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/compass/2012/08/01/compass-retina-display-mixin</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;This compass mixin helps for applying high-resolution background images in your stylesheet. You provide it with an image path and the dimensions of the original-resolution image. The mixin creates a media query spefically for Retina displays, changes the background image for the selector elements to use the high-resolution (@2x) variant and applies a background-size of the original image in order to maintain proper dimensions. To use it, download the mixin, import or include it in your SASS stylesheet, and apply it to elements of your choice.&lt;/p&gt;

&lt;p&gt;Syntax:&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The extention defaults to PNG. To change this - define $extention when calling (ie jpg);&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Add the .at2x() mixin from retina.scss to your compass stylesheet (or reference it in an @import statement)&lt;/li&gt;
&lt;li&gt; In your stylesheet, call the .at2x() mixin anywhere instead of using background-image &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;Will compile to: &lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Sass Sticky Footer Mixin</title>
   <link href="http://docs.tinyfactory.co/sass/2012/07/31/sass-sticky-footer-mixin.html"/>
   <updated>2012-07-31T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/sass/2012/07/31/sass-sticky-footer-mixin</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;Compass has a really nice &lt;a href=&quot;http://compass-style.org/reference/compass/layout/sticky_footer/&quot;&gt;sticky footer&lt;/a&gt; mixin built into the library but we've been writing our own site in vanilla SASS so I converted an out of date SASS mixin to it's current syntax.&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Compass Placeholder Text Mixin</title>
   <link href="http://docs.tinyfactory.co/compass/2012/07/31/Compass-Placeholder-Text-Mixin.html"/>
   <updated>2012-07-31T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/compass/2012/07/31/Compass-Placeholder-Text-Mixin</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;Simple Mixin For Compass Placeholder Text&lt;/p&gt;

&lt;p&gt;Syntax:&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.  Add the .input-placeholder() mixin from _placeholderText.scss to your compass stylesheet (or reference it in an @import statement)
2.  In your stylesheet, call the .input-placeholder() mixin anywhere you want to style your placeholder text
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Will compile to: 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Generate An Icon Font</title>
   <link href="http://docs.tinyfactory.co/design/2012/07/27/generate-an-icon-font.html"/>
   <updated>2012-07-27T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/design/2012/07/27/generate-an-icon-font</id>
   
   <author>
   	<name>Aaron Wade</name>
   	<email>hi@areuswade.com</email>
   </author>
   <content type="html">&lt;p&gt;We're going to use an awesome tool called &lt;a href=&quot;https://github.com/averyvery/hieroglyph&quot;&gt;Hieroglyph&lt;/a&gt;. There's already a pretty intuitive readme file in the repo, but I hope to elaborate a little more on what was provided.&lt;/p&gt;

&lt;h4&gt;Installing Hieroglyph&lt;/h4&gt;

&lt;p&gt;Open up &lt;strong&gt;Terminal&lt;/strong&gt; and type &lt;code&gt;gem install hieroglyph&lt;/code&gt;. If for some reason you get an error and/or the install fails, update RubyGems by entering &lt;code&gt;sudo gem update --system&lt;/code&gt; into Terminal, then give it another shot. You can test to see if it works by simply entering &lt;code&gt;hieroglyph&lt;/code&gt; in terminal to generate an empty, dummy font.&lt;/p&gt;

&lt;p&gt;You should get output similar to this:&lt;/p&gt;

&lt;p&gt;``` bash
~/Desktop » hieroglyph&lt;/p&gt;

&lt;p&gt;Setup:
  ImageMagick not detected - skipping character sheet&lt;/p&gt;

&lt;p&gt;Reading glyphs:&lt;/p&gt;

&lt;p&gt;Done!
  MyFont generated saved to /Users/Aaron/Desktop/MyFont.svg
  Single characters: 
  Unicode characters: 
```&lt;/p&gt;

&lt;p&gt;Then just delete the dummy SVG file, in my case, on my Desktop.&lt;/p&gt;

&lt;h4&gt;Getting your icons ready&lt;/h4&gt;

&lt;p&gt;Open up Illustrator and create a new document sized &lt;strong&gt;1000pt x 1000pt&lt;/strong&gt;. We need to make sure that the icons are centered, and relatively the same size. Drag a horizontal guide so it sits &lt;strong&gt;250 points&lt;/strong&gt; from the top of the canvas. You can set this easily by dragging out a guide, then in your Illustrator toolbar setting the &lt;strong&gt;Y value&lt;/strong&gt; to 250. You should also drag out a vertical rule with the &lt;strong&gt;X value&lt;/strong&gt; of 500 so you have a vertical center showing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://docs.tinyfactory.co/images/assets/toolbar.png&quot; alt=&quot;Illustrator Toolbar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://docs.tinyfactory.co/images/assets/twitter-ss.png&quot; alt=&quot;Twitter icon mapped to T key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.tinyfactory.co/images/downloads/icon.zip&quot; class=&quot;button&quot;&gt;Download Icon Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Make sure your icon is a compound path. If your canvas has more than one shape, it will cause issues with the font generation. You can make it a compound path by selecting all the shapes in the icon, and pressing &lt;strong&gt;CMD + 8&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;Saving &amp;amp; Naming Convetion&lt;/h4&gt;

&lt;p&gt;Save your files as SVGs. Name them &lt;em&gt;[key]-icon-name.svg&lt;/em&gt;. If you downloaded the template, you'll notice it's named [t]-twitter.svg. This will map the icon to the T key when our font is generated.&lt;/p&gt;

&lt;h4&gt;Font Generation&lt;/h4&gt;

&lt;p&gt;I've saved all my icons into a folder on my Desktop called &lt;strong&gt;glyphs&lt;/strong&gt;. Go back into Terminal and browse to your Desktop by typing &lt;code&gt;cd ~/Desktop&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once we're there we can run &lt;code&gt;hieroglyph -n FontName -g path/to/glyphs -o destination/path&lt;/code&gt;.&lt;br&gt;
Or if you've setup everything the way I have &lt;code&gt;hieroglyph -n Icons -g glyphs&lt;/code&gt; will generate the font on your desktop.&lt;/p&gt;

&lt;p&gt;Your output will change depending on how many icons you've generated, but mine reads:&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;Now that you've got your font in an SVG format, go ahead and run your new font through &lt;a href=&quot;http://www.fontsquirrel.com/fontface/generator&quot;&gt;this font-face generator&lt;/a&gt; to get the other @font-face formats. Also make sure that you've clicked &lt;strong&gt;Expert&lt;/strong&gt;  and selected the custom subsetting option in the font-squirrel interface. If you're ballin' out of control, you might use &lt;a href=&quot;http://www.fontgear.net/fontxchange.html&quot;&gt;FontXChange&lt;/a&gt; to generate the different formats instead.&lt;/p&gt;

&lt;h4&gt;In Conclusion&lt;/h4&gt;

&lt;p&gt;Now you're ready to embed those files into your stylesheet and start serving some icons!&lt;/p&gt;

&lt;p&gt;If you really want to do it up proper, &lt;a href=&quot;https://github.com/blog/1135-the-making-of-octicons&quot;&gt;GitHub's post about Octicons&lt;/a&gt; goes through their process in great detail.&lt;/p&gt;

&lt;p&gt;If this is too much for you, fortunately there are tons of great services out there right now that really make this easier. There is the newly created &lt;a href=&quot;http://symbolset.com/&quot;&gt;Symbolset&lt;/a&gt;, which is a font of icons that advocates way better semantics than I've shown above. The &lt;a href=&quot;http://pictos.cc/font/&quot;&gt;Pictos font&lt;/a&gt; has a pretty wide array of icons, &lt;a href=&quot;http://pictos.cc/server/&quot;&gt;Pictos Server&lt;/a&gt; and &lt;a href=&quot;https://www.shifticons.com/&quot;&gt;Shifticons&lt;/a&gt; which are both damn fine services for doing this a lot faster.&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Setting Up Node Forever</title>
   <link href="http://docs.tinyfactory.co/node.js/2012/07/26/setting-up-node-forever.html"/>
   <updated>2012-07-26T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/node.js/2012/07/26/setting-up-node-forever</id>
   
   <author>
   	<name>Justen Palmer</name>
   	<email>artichokeworld@gmail.com</email>
   </author>
   <content type="html">&lt;h3&gt;Keep a node server running&lt;/h3&gt;

&lt;p&gt;Download the CLI tool from: 
&lt;a href=&quot;https://github.com/nodejitsu/forever/&quot;&gt;https://github.com/nodejitsu/forever/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;h3&gt;Installation&lt;/h3&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Mysql Setup On Aws Centos</title>
   <link href="http://docs.tinyfactory.co/centos/2012/07/26/MySql-Setup-on-AWS-CentOS.html"/>
   <updated>2012-07-26T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/centos/2012/07/26/MySql-Setup-on-AWS-CentOS</id>
   
   <author>
   	<name>Alex Rolek</name>
   	<email>a.rolek@gmail.com</email>
   </author>
   <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install mysql and the server
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start the mysql server
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set the initial root password
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Login to MySQL as root
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create new MySQL user and grant them permissions on all databases
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a new database
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>

 </entry>
 
 <entry>
   <title>Setup Nodejs Environment On Ec2</title>
   <link href="http://docs.tinyfactory.co/node.js/2012/07/18/setup-nodejs-environment-on-ec2.html"/>
   <updated>2012-07-18T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/node.js/2012/07/18/setup-nodejs-environment-on-ec2</id>
   
   <author>
   	<name>Justen Palmer</name>
   	<email>artichokeworld@gmail.com</email>
   </author>
   <content type="html">&lt;h2&gt;Create the EC2 Instance&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Login to &lt;a href=&quot;http://aws.amazon.com/&quot;&gt;aws.amazon.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pulldown &lt;strong&gt;My Account/Console&lt;/strong&gt; and select &lt;strong&gt;AWS Management Console&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;EC2&lt;/strong&gt; under &lt;strong&gt;Compute and Networking&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click the &lt;strong&gt;Launch Instance&lt;/strong&gt; button&lt;/li&gt;
&lt;li&gt;Select the Classic Interface&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;64 bit Amazon Linux AMI&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Micro&lt;/strong&gt; (unless for high traffic site)&lt;/li&gt;
&lt;li&gt;Set zone to &lt;strong&gt;us-east-1a&lt;/strong&gt; (or make a note if selecting another zone)&lt;/li&gt;
&lt;li&gt;Give the instance a name&lt;/li&gt;
&lt;li&gt;Download the ssh key&lt;/li&gt;
&lt;li&gt;Move key to your local ~/.ssh/ directory&lt;/li&gt;
&lt;li&gt;Change permissions on key to 600: 
Liquid error: No such file or directory - posix_spawnp&lt;/li&gt;
&lt;li&gt;In EC2 setup a security group with the following open ports:
Liquid error: No such file or directory - posix_spawnp&lt;/li&gt;
&lt;li&gt;Launch the instance&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Associate an IP with your EC2 instance&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Under &lt;strong&gt;Networking and Security&lt;/strong&gt; select &lt;strong&gt;Elastic IPs&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click the &lt;strong&gt;Allocate New Address&lt;/strong&gt; button&lt;/li&gt;
&lt;li&gt;Ensure EC2 is selected and click &lt;strong&gt;Yes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Select the newly created IP and click on the &lt;strong&gt;Associate Address&lt;/strong&gt; button&lt;/li&gt;
&lt;li&gt;Select the EC2 instance&lt;/li&gt;
&lt;li&gt;Copy the IP Address (You'll need it later)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Connect to the New Instance&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Connect with:
Liquid error: No such file or directory - posix_spawnp&lt;/li&gt;
&lt;li&gt;Add public key to to the authorized_keys file for passwordless ssh login 
Liquid error: No such file or directory - posix_spawnp&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Install development tools group for compiling:
Liquid error: No such file or directory - posix_spawnp &lt;/li&gt;
&lt;li&gt;Install ssl support for node with: 
Liquid error: No such file or directory - posix_spawnp &lt;/li&gt;
&lt;li&gt;Download Node.js repo and checkout a version to install
Liquid error: No such file or directory - posix_spawnp&lt;/li&gt;
&lt;li&gt; Configure, make and install Node.js
Liquid error: No such file or directory - posix_spawnp&lt;/li&gt;
&lt;li&gt; Setup Node.js environment varibales
Liquid error: No such file or directory - posix_spawnp&lt;br /&gt;&lt;/li&gt;
&lt;li&gt; Change permissions on node directory
Liquid error: No such file or directory - posix_spawnp&lt;br /&gt;&lt;/li&gt;
&lt;li&gt; Confirm we have a successfull install:
Liquid error: No such file or directory - posix_spawnp&lt;br /&gt;
###Congrats!  Node.js is installed!  What's next?  You can install mongodb or setup a git repo on the server to really get developing.&lt;/li&gt;
&lt;/ol&gt;
</content>

 </entry>
 
 <entry>
   <title>Git Branching</title>
   <link href="http://docs.tinyfactory.co/git/2012/07/10/git-branching.html"/>
   <updated>2012-07-10T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/git/2012/07/10/git-branching</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;To create a new branch locally&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;To create a new local branch from a remote branch&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;Push a New Local Branch to a Remote Git Repo&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;To view your local branches&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;To view all branches (local and remote)&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;To view all remote branches &lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;To merge a branch check out the branch you'd like to merge to and run&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;To push all local changes to remote&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;To push local changes for a specific repo&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;To delete a local branch
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;To delete a remote branch
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;View GUI of merges&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Changing the head on a Git Repo</title>
   <link href="http://docs.tinyfactory.co/git/2012/07/09/changing-the-head-pointer-on-a-git-repoistory.html"/>
   <updated>2012-07-09T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/git/2012/07/09/changing-the-head-pointer-on-a-git-repoistory</id>
   
   <author>
   	<name>Michael Sacca</name>
   	<email>michael.sacca@gmail.com</email>
   </author>
   <content type="html">&lt;p&gt;If you want the default branch from a &lt;code&gt;git clone&lt;/code&gt; to be something besides &lt;code&gt;master&lt;/code&gt;, use the following steps:&lt;/p&gt;

&lt;p&gt;Check what remote branches are available: &lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;The output will look like:&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;Notice &lt;code&gt;origin/HEAD -&amp;gt; orgin/master&lt;/code&gt;.  When you issue a &lt;code&gt;git clone&lt;/code&gt; on this repository you will get the master branch by default.  If want to change this to the dev branch we also have in our remote repository, issue the following command&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;To confirm the change took, run &lt;code&gt;git branch -r&lt;/code&gt; and review our output:&lt;/p&gt;

&lt;p&gt;Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;

&lt;p&gt;&lt;code&gt;origin/HEAD -&amp;gt; orgin/dev&lt;/code&gt; is pointing to our dev branch.&lt;/p&gt;
</content>

 </entry>
 
 <entry>
   <title>Setup Vsftp On Aws Centos</title>
   <link href="http://docs.tinyfactory.co/centos/2012/07/08/setup-vsftp-on-aws-centos.html"/>
   <updated>2012-07-08T00:00:00-07:00</updated>
   <id>http://docs.tinyfactory.co/centos/2012/07/08/setup-vsftp-on-aws-centos</id>
   
   <author>
   	<name>Alex Rolek</name>
   	<email>a.rolek@gmail.com</email>
   </author>
   <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install &lt;strong&gt;vsftpd&lt;/strong&gt;
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open up the config file 
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add the following lines to the end of &lt;strong&gt;vsftpd.conf&lt;/strong&gt;
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open up the following &lt;strong&gt;ports&lt;/strong&gt; at the security group within &lt;strong&gt;AWS&lt;/strong&gt;
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Restart the &lt;strong&gt;vsftpd&lt;/strong&gt; server
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add new user to server for login
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Give user a password so they can login
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add entry to auto start &lt;strong&gt;vsftpd&lt;/strong&gt; on server restart
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bonus - if you want to have a user’s files uploaded to an EBS mount, symlink from the FTP user’s directory to the EBS mount
Liquid error: No such file or directory - posix_spawnp&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>

 </entry>
 

</feed>
